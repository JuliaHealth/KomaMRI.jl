steps:
  - label: "CPU: Run Benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia --project=bench -e 'println("--- :julia: Run Benchmarks")
          include("bench/runbenchmarks.jl")'
    artifact_paths: 
      - "bench/results/*"
    agents:
      queue: "juliagpu"
    env:
      BENCHMARK_GROUP: CPU
    timeout_in_minutes: 120

  - label: "AMDGPU: Run Benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'

      julia --project=bench -e 'println("---:julia: Add AMDGPU to bench environment")
          using Pkg
          Pkg.add("AMDGPU")'
      
      julia --project=bench -e 'println("--- :julia: Run Benchmarks")
          include("bench/runbenchmarks.jl")'
    artifact_paths: 
      - "bench/results/*"
    agents:
      queue: "juliagpu"
      rocm: "*"
    env:
      BENCHMARK_GROUP: AMDGPU
    timeout_in_minutes: 120

  - label: "CUDA: Run Benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'

      julia --project=bench -e 'println("---:julia: Add CUDA to bench environment")
          using Pkg
          Pkg.add("CUDA")'
      
      julia --project=bench -e 'println("--- :julia: Run Benchmarks")
          include("bench/runbenchmarks.jl")'
    artifact_paths: 
      - "bench/results/*"
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      BENCHMARK_GROUP: CUDA
    timeout_in_minutes: 120

  - label: "Metal: Run Benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'

      julia --project=bench -e 'println("---:julia: Add Metal to bench environment")
          using Pkg
          Pkg.add("Metal")'
      
      julia --project=bench -e 'println("--- :julia: Run Benchmarks")
          include("bench/runbenchmarks.jl")'
    artifact_paths: 
      - "bench/results/*"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    env:
      BENCHMARK_GROUP: Metal
    timeout_in_minutes: 120

  - label: "oneAPI: Run Benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'

      julia --project=bench -e 'println("---:julia: Add CUDA to bench environment")
          using Pkg
          Pkg.add("oneAPI")'
      
      julia --project=bench -e 'println("--- :julia: Run Benchmarks")
          include("bench/runbenchmarks.jl")'
    artifact_paths: 
      - "bench/results/*"
    agents:
      queue: "juliagpu"
      intel: "*"
    env:
      BENCHMARK_GROUP: oneAPI
    timeout_in_minutes: 120

  - label: "Combine benchmarks"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    wait: ~
    command: |
      buildkite-agent artifact download 'bench/results/*' bench/results/

      julia --project=bench -e 'println("--- :julia: Combining Benchmarks")
          include("bench/aggregate.jl")'
    artifact_paths:
      - "bench/results/*"
    agents:
      queue: "juliagpu"
    timeout_in_minutes: 10

